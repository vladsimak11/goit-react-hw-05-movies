{"version":3,"file":"static/js/672.4b20ce44.chunk.js","mappings":"gMACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAuG,uB,gDC2DvG,EAtDe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAmCF,EAAAA,EAAAA,UAAS,IAA5C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAgB,UAAGP,EAAaQ,IAAI,eAApB,QAA+B,GAC/CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAAa,GCXV,SAAqBQ,GAC1B,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAJY,mCAKZC,MAAOJ,EACPK,SAAU,QACVC,KAAM,IAGR,OAAOC,MAAM,GAAD,OAXG,4CAWH,YAAiBN,IAAiBO,MAAK,SAAAC,GACjD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CDFGC,CAAYnB,GACTa,MAAK,YAAgB,IAAdO,EAAa,EAAbA,QAEN,OADAC,QAAQC,IAAIF,GACLrB,EAAaqB,EACrB,IACAG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAhB,IACXC,SAAQ,WACP5B,GAAa,EACd,GACJ,GAAE,CAACG,IAEJ,IAMM0B,EAAgB5B,EAAW6B,QAAO,qBAAEC,MAClCC,cAAcC,SAAS9B,EAAiB6B,cADR,IAIxC,OADAR,QAAQC,IAAI7B,IAEV,iBAAKsC,UAAWC,EAAhB,WACE,kBAAMC,SAZW,SAACC,GACpBA,EAAEC,iBACFzC,EAAgB,CAAC0C,KAAMF,EAAEG,OAAOC,SAASC,KAAKC,QAC9CN,EAAEG,OAAOC,SAASC,KAAKC,MAAQ,EAChC,EAQG,WACE,kBACEC,KAAK,OACLL,KAAK,UAEP,mBAAQK,KAAK,SAASV,UAAWC,EAAjC,uBAGDpC,IAAa,SAAC,IAAD,KACd,eAAImC,UAAWC,EAAf,SAEIN,EAAcgB,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIf,EAAW,EAAXA,MACtB,OACE,yBAAa,SAAC,KAAD,CAAMgB,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAM5C,GAAlC,SAA+C0B,KAAnDe,EAEZ,QAKV,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__hb-lD\",\"listMoives\":\"Movies_listMoives__hQlKh\",\"button\":\"Movies_button__q3Y5z\"};","import css from './Movies.module.css';\nimport {fetchMovies} from '../services/fetchMovies';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ThreeDots } from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [nameMovies, setNameMovie] = useState([]);\n  const nameSearchMovies = searchMovies.get(\"name\") ?? \"\";\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovies(nameSearchMovies)\n      .then(({results}) => {\n        console.log(results);\n        return setNameMovie(results);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [nameSearchMovies]);\n\n  const handleSumbit = (e) => {\n    e.preventDefault();\n    setSearchMovies({name: e.target.elements.text.value});\n    e.target.elements.text.value = '';\n  }\n\n  const visibleMovies = nameMovies.filter(({title}) =>\n    title.toLowerCase().includes(nameSearchMovies.toLowerCase())\n  );\n  console.log(searchMovies);\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSumbit}>\n        <input\n          type=\"text\"\n          name='text'         \n        />\n        <button type='submit' className={css.button}>Search</button>\n      </form>\n\n      {isLoading && <ThreeDots />}\n      <ul className={css.listMoives}>\n        {\n          visibleMovies.map(({id, title}) => {\n            return (\n              <li key={id}><Link to={`${id}`} state={{ from: location }}>{title}</Link></li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst API_KEY = 'c2392c054aee28abbedad5531d1dfbd2';\n\nexport function fetchMovies(queryValue) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: queryValue,\n    language: 'en-US',\n    page: 1,\n  });\n\n  return fetch((`${BASE_URL}?${searchParams}`)).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  })\n}\n\n"],"names":["useSearchParams","searchMovies","setSearchMovies","useState","isLoading","setIsLoading","nameMovies","setNameMovie","nameSearchMovies","get","location","useLocation","useEffect","queryValue","searchParams","URLSearchParams","api_key","query","language","page","fetch","then","response","ok","Error","status","json","fetchMovies","results","console","log","catch","error","finally","visibleMovies","filter","title","toLowerCase","includes","className","css","onSubmit","e","preventDefault","name","target","elements","text","value","type","map","id","to","state","from"],"sourceRoot":""}